{"ast":null,"code":"var _jsxFileName = \"F:\\\\THE_PROJECT\\\\Front\\\\moove-frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from 'react';\n// import L from 'leaflet';\n// import 'leaflet/dist/leaflet.css';\n// import './MapComponent.scss';\n// import { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\n\n// function MapComponent() {\n//     const mapRef = useRef(null); // Create a ref for the map container\n//     const mapInstanceRef = useRef(null); // Ref to store the map instance\n\n//     useEffect(() => {\n//       if (!mapRef.current || mapInstanceRef.current) return; // Only initialize the map once\n\n//       // Initialize the map\n//       mapInstanceRef.current = L.map(mapRef.current).setView([51.505, -0.09], 13);\n\n//     //   L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n//     //     maxZoom: 19,\n//     //     minZoom: 4,\n//     //     tileSize: 512,\n//     //     zoomOffset: -1,\n//     //     attribution: '© OpenStreetMap contributors',\n//     //     id: 'raincor/cktyvcl2e1bns17sc9f3cfgyq',\n//     //     accessToken: 'pk.eyJ1IjoicmFpbmNvciIsImEiOiJja3R1bTVzZ2kyMWg4MnZwbm9hZXZzdmVrIn0.3JM64Knf4fHYlL2gAB-_pQ'\n//     //   }).addTo(mapInstanceRef.current);\n\n//       L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//       maxZoom: 19,\n//       attribution: '© OpenStreetMap contributors'\n//       }).addTo(mapInstanceRef.current);\n\n//       return () => {\n//           if (mapInstanceRef.current) {\n//           mapInstanceRef.current.remove(); // Clean up the map instance on unmount\n//           }\n//       };\n//       }, []);\n\n//     return <div ref={mapRef} className='map-container' ></div>;\n//   }\n\n//   export default MapComponent;\n// function MapComponent() {\n//   return (\n//     <MapContainer \n//       center={[51.505, -0.09]} \n//       zoom={13} \n//       scrollWheelZoom={false}\n//       style={{ height: '500px', width: '100%' }}\n//     >\n//       <TileLayer\n//         attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//       />\n//       <Marker position={[51.505, -0.09]}>\n//         <Popup>\n//           A pretty CSS3 popup. <br /> Easily customizable.\n//         </Popup>\n//       </Marker>\n//     </MapContainer>\n//   );\n// }\n\n// export default MapComponent;\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './MapComponent.scss';\nimport MapUI from './MapUI';\n\n// Correct the path for Leaflet marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nfunction MapComponent() {\n  _s();\n  // Mapbox tile layer URL and access token\n  const mapboxUrl = 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}';\n  const accessToken = 'pk.eyJ1IjoicmFpbmNvciIsImEiOiJja3R1bTVzZ2kyMWg4MnZwbm9hZXZzdmVrIn0.3JM64Knf4fHYlL2gAB-_pQ'; // Replace with your Mapbox access token\n  const mapboxId = 'raincor/cktyvcl2e1bns17sc9f3cfgyq'; // Replace with your Mapbox style ID\n\n  const [dealType, setDealType] = useState('to-rent');\n  const [properties, setProperties] = useState([]);\n  const fetchProperties = async dealType => {\n    // API  request to deal with dealType switch\n    // To fetch properties based on dealType\n    // Update properties state\n    try {\n      const dealType = dealType;\n      const url = 'http://localhost:5000/api/listings?deal_type=${dealType}';\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error(`Expected JSON response, got: ${contentType}`);\n      }\n      const data = await response.json();\n      console.log(\"Fetched data:\", data); // Log fetched data\n      console.log(url);\n      setProperties(data);\n    } catch (error) {\n      console.error('Error fetching properties:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProperties(dealType);\n  }, [dealType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-ui-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      scrollWheelZoom: true,\n      zoomControl: false,\n      className: \"map-container\"\n      //   style={{ height: '500px', width: '100%' }}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(MapUI /* ...props */, {\n        fetchProperties: fetchProperties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: mapboxUrl,\n        id: mapboxId,\n        accessToken: accessToken,\n        tileSize: 512,\n        zoomOffset: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [51.505, -0.09],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 34\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"zq7/8ek41VezTjsUUD7sQ7pJOiQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","MapUI","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","_s","mapboxUrl","accessToken","mapboxId","dealType","setDealType","properties","setProperties","fetchProperties","url","response","fetch","ok","Error","status","contentType","headers","get","includes","data","json","console","log","error","className","children","center","zoom","scrollWheelZoom","zoomControl","fileName","_jsxFileName","lineNumber","columnNumber","attribution","id","tileSize","zoomOffset","position","_c","$RefreshReg$"],"sources":["F:/THE_PROJECT/Front/moove-frontend/src/MapComponent.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from 'react';\r\n// import L from 'leaflet';\r\n// import 'leaflet/dist/leaflet.css';\r\n// import './MapComponent.scss';\r\n// import { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\r\n\r\n// function MapComponent() {\r\n//     const mapRef = useRef(null); // Create a ref for the map container\r\n//     const mapInstanceRef = useRef(null); // Ref to store the map instance\r\n  \r\n//     useEffect(() => {\r\n//       if (!mapRef.current || mapInstanceRef.current) return; // Only initialize the map once\r\n  \r\n//       // Initialize the map\r\n//       mapInstanceRef.current = L.map(mapRef.current).setView([51.505, -0.09], 13);\r\n  \r\n//     //   L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\r\n//     //     maxZoom: 19,\r\n//     //     minZoom: 4,\r\n//     //     tileSize: 512,\r\n//     //     zoomOffset: -1,\r\n//     //     attribution: '© OpenStreetMap contributors',\r\n//     //     id: 'raincor/cktyvcl2e1bns17sc9f3cfgyq',\r\n//     //     accessToken: 'pk.eyJ1IjoicmFpbmNvciIsImEiOiJja3R1bTVzZ2kyMWg4MnZwbm9hZXZzdmVrIn0.3JM64Knf4fHYlL2gAB-_pQ'\r\n//     //   }).addTo(mapInstanceRef.current);\r\n\r\n//       L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n//       maxZoom: 19,\r\n//       attribution: '© OpenStreetMap contributors'\r\n//       }).addTo(mapInstanceRef.current);\r\n\r\n//       return () => {\r\n//           if (mapInstanceRef.current) {\r\n//           mapInstanceRef.current.remove(); // Clean up the map instance on unmount\r\n//           }\r\n//       };\r\n//       }, []);\r\n  \r\n//     return <div ref={mapRef} className='map-container' ></div>;\r\n//   }\r\n  \r\n//   export default MapComponent;\r\n// function MapComponent() {\r\n//   return (\r\n//     <MapContainer \r\n//       center={[51.505, -0.09]} \r\n//       zoom={13} \r\n//       scrollWheelZoom={false}\r\n//       style={{ height: '500px', width: '100%' }}\r\n//     >\r\n//       <TileLayer\r\n//         attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n//         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//       />\r\n//       <Marker position={[51.505, -0.09]}>\r\n//         <Popup>\r\n//           A pretty CSS3 popup. <br /> Easily customizable.\r\n//         </Popup>\r\n//       </Marker>\r\n//     </MapContainer>\r\n//   );\r\n// }\r\n\r\n// export default MapComponent;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapComponent.scss';\r\nimport MapUI from './MapUI';\r\n\r\n// Correct the path for Leaflet marker icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nfunction MapComponent() {\r\n  // Mapbox tile layer URL and access token\r\n  const mapboxUrl = 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}';\r\n  const accessToken = 'pk.eyJ1IjoicmFpbmNvciIsImEiOiJja3R1bTVzZ2kyMWg4MnZwbm9hZXZzdmVrIn0.3JM64Knf4fHYlL2gAB-_pQ'; // Replace with your Mapbox access token\r\n  const mapboxId = 'raincor/cktyvcl2e1bns17sc9f3cfgyq'; // Replace with your Mapbox style ID\r\n\r\n  const [dealType, setDealType] = useState('to-rent');\r\n  const [properties, setProperties] = useState([]);\r\n\r\n  const fetchProperties = async (dealType) => {\r\n    // API  request to deal with dealType switch\r\n    // To fetch properties based on dealType\r\n    // Update properties state\r\n    try {\r\n      const dealType = dealType;\r\n      const url = 'http://localhost:5000/api/listings?deal_type=${dealType}';\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('application/json')) {\r\n        throw new Error(`Expected JSON response, got: ${contentType}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Fetched data:\", data);  // Log fetched data\r\n      console.log(url)\r\n      setProperties(data);\r\n    } catch (error) {\r\n      console.error('Error fetching properties:', error);\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProperties(dealType);\r\n  }, [dealType]);\r\n\r\n  return (\r\n    <div className='map-ui-container'>\r\n      <MapContainer \r\n        center={[51.505, -0.09]} \r\n        zoom={13} \r\n        scrollWheelZoom={true}\r\n        zoomControl={false}\r\n        className='map-container'\r\n      //   style={{ height: '500px', width: '100%' }}\r\n      >\r\n        <MapUI /* ...props */ fetchProperties={fetchProperties} />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url={mapboxUrl}\r\n          id={mapboxId}\r\n          accessToken={accessToken}\r\n          tileSize={512}\r\n          zoomOffset={-1}\r\n        />\r\n        <Marker position={[51.505, -0.09]}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}